# Generated by Django 3.1.7 on 2021-04-03 20:51

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=25)),
                ('last_name', models.CharField(max_length=25)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('is_representative', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BusinessTrip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateField()),
                ('distance', models.FloatField()),
                ('co2e', models.FloatField()),
                ('transportation_mode', models.CharField(choices=[('CAR', 'Car'), ('BUS', 'Bus'), ('TRAIN', 'Train'), ('PLANE', 'Plane')], max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorkingGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('organization', models.CharField(choices=[('Heidelberg University', 'Heidelberg University'), ('MPIA', 'Max-Planck Institute'), ('EMBL', 'European Molecular Biology Laboratory')], max_length=100)),
                ('representative', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('name', 'organization')},
            },
        ),
        migrations.CreateModel(
            name='TrainTrip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_type', models.CharField(choices=[('ELECTRIC', 'Electric'), ('DIESEL', 'Diesel'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=10)),
                ('business_trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emissions.businesstrip')),
            ],
        ),
        migrations.CreateModel(
            name='PlaneTrip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IATA_start', models.CharField(max_length=3)),
                ('IATA_destination', models.CharField(max_length=3)),
                ('flight_class', models.CharField(choices=[('ECONOMY', 'Economy'), ('BUSINESS', 'Business'), ('FIRST', 'First Class'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=15)),
                ('round_trip', models.BooleanField(default=True)),
                ('business_trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emissions.businesstrip')),
            ],
        ),
        migrations.CreateModel(
            name='Heating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consumption_kwh', models.FloatField()),
                ('timestamp', models.DateField()),
                ('fuel_type', models.CharField(choices=[('PUMPAIR', 'Pump air'), ('PUMPGROUND', 'Pump ground'), ('PUMPWATER', 'Pump water'), ('LIQUID', 'Liquid'), ('OIL', 'Oil'), ('PELLETS', 'Pellets'), ('SOLAR', 'Solar'), ('WOODCHIPS', 'Woodchips'), ('ELECTRICITY', 'Electricity'), ('GAS', 'Gas')], max_length=20)),
                ('cost_kwh', models.FloatField()),
                ('co2e', models.FloatField()),
                ('working_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emissions.workinggroup')),
            ],
        ),
        migrations.CreateModel(
            name='Electricity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consumption_kwh', models.FloatField()),
                ('timestamp', models.DateField()),
                ('fuel_type', models.CharField(choices=[('german energy mix', 'German Energy Mix'), ('solar', 'Solar')], max_length=30)),
                ('co2e', models.FloatField()),
                ('working_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emissions.workinggroup')),
            ],
        ),
        migrations.CreateModel(
            name='CarTrip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passengers', models.IntegerField()),
                ('fuel_type', models.CharField(choices=[('ELECTRIC', 'Electric'), ('NATURAL', 'Natural'), ('GAS', 'Gas'), ('GASOLINE', 'Gasoline'), ('DIESEL', 'Diesel'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=10)),
                ('size', models.CharField(choices=[('SMALL', 'Small'), ('MEDIUM', 'Medium'), ('LARGE', 'Large'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=10)),
                ('business_trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emissions.businesstrip')),
            ],
        ),
        migrations.CreateModel(
            name='BusTrip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.FloatField(null=True)),
                ('occupancy', models.IntegerField(null=True)),
                ('fuel_type', models.CharField(choices=[('ELECTRIC', 'Electric'), ('NATURAL', 'Natural'), ('GAS', 'Gas'), ('GASOLINE', 'Gasoline'), ('DIESEL', 'Diesel'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=10)),
                ('size', models.CharField(choices=[('SMALL', 'Small'), ('MEDIUM', 'Medium'), ('LARGE', 'Large'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=10)),
                ('business_trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emissions.businesstrip')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='working_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='emissions.workinggroup'),
        ),
    ]
